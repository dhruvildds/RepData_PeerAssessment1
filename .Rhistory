install.packages("devtools")
find_rtools()
librarr(devtools)
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(kernsmooth)
library(KernSmooth)
install.packages("ActivePredictiveModelling")
install.packages("AppliedPredictiveModeling")
library("AppliedPredictiveModeling")
data(concrete)
library(caret)
set.seed(1000)
inTrain = createDataPartition(mixtures$CompressiveStrength, p = 3/4)[[1]]
training = mixtures[ inTrain,]
testing = mixtures[-inTrain,]
install.packages("caret")
data(concrete)
library(caret)
set.seed(1000)
inTrain = createDataPartition(mixtures$CompressiveStrength, p = 3/4)[[1]]
training = mixtures[ inTrain,]
testing = mixtures[-inTrain,]
head(concrete)
hist(concrete$Superplasticizer)
adData = data.frame(diagnosis,predictors)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
trainIndex = createDataPartition(diagnosis, p = 0.50,list=FALSE)
training = adData[trainIndex,]
testing = adData[-trainIndex,]
adData = data.frame(predictors)
trainIndex = createDataPartition(diagnosis,p=0.5,list=FALSE)
training = adData[trainIndex,]
testing = adData[-trainIndex,]
head(training)
head(diagnosis)
head(predictors)
set.seed(3433)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
match("IL",AlzheimerDisease)
match("IL_2",AlzheimerDisease)
match("IL_2",adData)
match("IL_11",adData)
?match()
match("IL",adData,incomparables=IL)
match("IL",adData,incomparables="IL")
match("IL_13",adData,incomparables="IL")
match("IL_13",adData)
which( colnames(adData)=="IL_11" )
which( colnames(adData)=="IL" )
which( colnames(adData)=="IL_8" )
new<-adData[,c(58:69)]
pr<-prcomp(new)
head(pr)
pr[1]
pr$x[,1]
pr$rotation
read.csv("C:\\Users\\temp\\Google Drive\\my lapy files\\MBA\\Trim5\\abfsi \\insurance.csv",header=TRUE)
read.csv("C:\\Users\\temp\\Google Drive\\my lapy files\\MBA\\Trim5\\abfsi \\insurance.csv",header=TRUE)
read.csv("C:\Users\\temp\\Google Drive\\my lapy files\\MBA\\Trim5\\abfsi \\insurance.csv",header=TRUE)
read.csv("C:\\Users\\temp\\Google Drive\\my lapy files\\MBA\\Trim5\\abfsi \\insurance.csv",header=TRUE)
read.csv("C:\\\Users\\temp\\Google Drive\\my lapy files\\MBA\\Trim5\\abfsi \\insurance.csv",header=TRUE)
read.csv("C:/Users\\temp\\Google Drive\\my lapy files\\MBA\\Trim5\\abfsi \\insurance.csv",header=TRUE)
read.csv("Users\\temp\\Google Drive\\my lapy files\\MBA\\Trim5\\abfsi \\insurance.csv",header=TRUE)
read.csv("C:\\Users\\temp\\Google Drive\\my lapy files\\MBA\\Trim5\\abfsi 2\\insurance.csv",header=TRUE)
x<-read.csv("C:\\Users\\temp\\Google Drive\\my lapy files\\MBA\\Trim5\\abfsi 2\\insurance.csv",header=TRUE)
head(X)
head(X)
head(x)
x<-read.csv("C:\\Users\\temp\\Google Drive\\my lapy files\\MBA\\Trim5\\abfsi 2\\insurance-master.csv",header=TRUE)
x<-read.csv("C:\\Users\\temp\\Google Drive\\my lapy files\\MBA\\Trim5\\abfsi 2\\insurance - master.csv",header=TRUE)
head(x)
str(x)
c<-lm(charges~.,data=x)
head(c)
head(c,n=1)
summary(c)
hist(x$charges)
summary(x$charges)
?as.Date
?colnames
?png
setwd("C:\\Users\\dhruvil\\Downloads\\cera\\Reproducible Research\\assign1\\RepData_PeerAssessment1")
read.csv("activity.csv",stringsAsFactors = FALSE)
read.csv("./activity.csv",stringsAsFactors = FALSE)
getwd()
unzip("activity.zip")
read.csv("./activity.csv",stringsAsFactors = FALSE)
a<-read.csv("./activity.csv",stringsAsFactors = FALSE)
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip")
unzip("activity.zip")
a<-read.csv("activity.csv",stringsAsFactors = FALSE)
head(a)
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",destfile = activity.zip)
unzip("activity.zip")
a<-read.csv("activity.csv",stringsAsFactors = FALSE)
head(a)
download.file("http://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",destfile = activity.zip)
unzip("activity.zip")
a<-read.csv("activity.csv",stringsAsFactors = FALSE)
head(a)
download.file(url,destfile = "activity.zip")
download.file(url,destfile = activity.zip)
download.file(url,destfile = "activity.zip")
download.file(url,destfile = "./activity.zip")
url<-"https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(url,destfile = "./activity.zip")
unzip("activity.zip")
a<-read.csv("activity.csv",stringsAsFactors = FALSE)
head(a)
str(a)
a$date<-as.Date(a$date,"%Y-%m-%d")
str(a)
tail(a)
summary(a)
summary(a,na.omit=TRUE)
summary(a,na.rm=TRUE)
b<-aggregate(a$steps~a$date,FUN=sum)
head(b)
hist(b[,2])
barplot(b[,2],b[,1])
plot(b[,2],b[,1])
plot(b[,1],b[,2])
args(barplot)
plot(order(b[,1]),b[,2])
plot(b[,1],b[,2])
plot(order(b[,1]),b[,2])
args(order)
plot(sort(b[,1]),b[,2])
plot(b[,1],b[,2])
plot(sort(b[,1]),b[,2])
args(plot)
hist(b[,2]~b[])
hist(b[,2])
hist(b[,2],xlab="No. of steps each day")
hist(b[,2],xlab="No. of steps each day",na.rm=TRUE)
hist(b[,2],xlab="No. of steps each day",na.omit=TRUE)
hist(b[,2],xlab="No. of steps each day",main=" histogram of the total number of steps taken each day")
hist(b[,2],xlab="No. of steps each day",main=" histogram of the total number of steps taken each day")
b<-aggregate(a$steps~a$date,FUN=sum,na.rm=TRUE)
head(b)
hist(b[,2],xlab="No. of steps each day",main=" histogram of the total number of steps taken each day")
summary(b)
head(a)
head(a,nrow=10)
head(a,nrows=10)
head(a,n=10)
plot(a$steps~a$interval)
plot(a$steps~a$interval,type="l")
plot(a$steps~sort(a$interval),type="l")
plot(a$steps~a$interval,type="l")
plot(a$steps~sort(a$interval),type="l")
tail(a)
which.max(a$steps)
a[16492]
a[16492,]
c<-aggregate(a$steps~a$interval,FUN=mean,na.rm=TRUE)
plot(c$steps~sort(c$interval),type="l")
c<-aggregate(a$steps~a$interval,FUN=mean,na.rm=TRUE)
head(c)
plot(c$steps~sort(c$interval),type="l")
str(c)
tail(c)
24*60/5
plot(c[,2]~sort(c[,1]),type="l")
c<-with(a,aggregate(steps~interval,FUN=mean,na.rm=TRUE))
head(c)
str(c)
plot(c[,2]~sort(c[,1]),type="l")
with(c,plot(steps~sort(interval),type="l")
)
with(c,plot(steps~sort(interval),type="l"))
with(c,plot(steps~sort(interval),type="l",xlab="interval",ylab="average steps"))
mean(b$steps,na.rm=TRUE)
summary(b)
c[which.max(c$steps)]
c[which.max(c$steps),]
summary(a)
summary(a$steps)
summary(a$interval)
summary(a$date)
str(a)
summary(a)
d<-a
head(d)
d<-sort(d$interval)
head(d)
d<-a[sort(a$date),]
head(d)
head(a)
d<-a[order(a$date),]
head(d)
for (i in 1:nrows(d))
if (is.na(d$steps))
d$steps=c[which(c$interval==d[i,3]),]
for (i in 1:nrow(d))
if (is.na(d$steps))
d$steps=c[which(c$interval==d[i,3]),]
View(c)
for (i in 1:nrow(d))
if (is.na(d$steps))
d$steps=c[d[i,3]/5,2]
c[d[5,3]/5,2]
View(c)
View(c)
head(d)
for (i in 1:nrow(d))
if (is.na(d$steps))
d[i,1]=c[d[i,3]/5,2]
d<-a[order(a$date),]
for (i in 1:nrow(d))
if (is.na(d[i,1]))
d[i,1]=c[d[i,3]/5,2]
is.na(d[1,1])
for (i in 1:nrow(d))
{if (is.na(d[i,1]=TRUE))
d[i,1]=c[d[i,3]/5,2]}
for (i in 1:nrow(d))
if (is.na(d[i,1]=TRUE))
d[i,1]=c[d[i,3]/5,2]
for (i in 1:nrow(d))
if (is.na(d[i,1]==TRUE))
d[i,1]=c[d[i,3]/5,2]
head(d)
for (i in 1:nrow(d))
if (is.na(d[i,1]))
d[i,1]=c[d[i,3]/5,2]
for (i in 1:nrow(d))
if (d[i,1]=="NA")
d[i,1]=c[d[i,3]/5,2]
for (i in 1:nrow(d))
if (d[i,1]==NA)
d[i,1]=c[d[i,3]/5,2]
for (i in 1:nrow(d))
if (is.na(d[i,1])
d[i,1]=c[d[i,3]/5,2]
for (i in 1:nrow(d))
if (is.na(d[i,1]))
d[i,1]=c[d[i,3]/5,2]
c[d[i,3]/5,2]
c[d[4,3]/5,2]
imp<-function(d,c)
{
for (i in 1:nrow(d))
if (is.na(d[i,1]))
d[i,1]=c[d[i,3]/5,2]
d
}
e<-imp(d,c)
e<-imp(d,c)
e<-imp(d,c)
n
debug(imp)
e<-imp(d,c)
i
n
for (i in 1:nrow(d))
{if (is.na(d[i,1])) d[i,1]=c[d[i,3]/5,2]}
for (i in 1:nrow(d))
{if (is.na(d[i,1]))
{   m<-d[i,3]/5
d[i,1]=c[m,2]
}}
for (i in 1:nrow(d))
{if (is.na(d[i,1]))
{   m<-d[i,3]/5
d[i,1]<-c[m,2]
}}
nrow(d)
for (i in 1:length(d))
{if (is.na(d[i,1]))
{   m<-d[i,3]/5
d[i,1]<-c[m,2]
}}
for (i in 1:length(d))
if (is.na(d[i,1]))
{
m<-m+1}
m
m<-0
for (i in 1:nrow(d))
if (is.na(d[i,1]))
{
m<-m+1}
m
for (i in 1:nrow(d))
if (is.na(d[i,1]))
{
d[i,1]<-c[d[i,3]/5,2]}
str(d)
for (i in 1:nrow(d))
if (is.na(d[i,1]))
{
d[i,1]<-as.int(c[d[i,3]/5,2])}
for (i in 1:nrow(d))
if (is.na(d[i,1]))
{
d[i,1]<-as.integer(c[d[i,3]/5,2])}
args(as.integer)
str(c)
i<-1
for (i in 1:nrow(d))
if (is.na(d[i,1]))
d[i,1]<-as.integer(c[d[i,3]/5,2])
if (is.na(d[i,1]))
if (is.na(d[i,1
if (is.na(d[i,1
if (is.na(d[i,1
if (is.na(d[i,1
if (is.na(d[i,1
if (is.na(d[i,1
if (is.na(d[i,1
if (is.na(d[i,1
if (is.na(d[i,1
source('~/.active-rstudio-document', echo=TRUE)
summary(a)
